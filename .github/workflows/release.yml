name: Fairseq Release

on: [push, pull_request]

jobs:

  get_next_version:
    runs-on: ubuntu-latest
    steps:
      - name: checkout-repo-content
        uses: actions/checkout@v2

      - name: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: get next version and tag
        id: get-next-version-and-tag
        run: |
          output=$(python3 release_utils.py --release-type patch) 
          echo $output
          new_version=$(echo $output | awk '{print $1}')
          new_tag=$(echo $output | awk '{print $2}')
          echo "new version is $new_version"
          echo "new tag is $new_tag"
          echo ::set-output name=version::test-$new_version
          echo ::set-output name=tag::test-$new_tag
          echo ::set-output name=branch_name::test-$new_version-release
          echo "NEW_TAG=test-$new_tag" >> $GITHUB_ENV
          echo "NEW_BRANCH=test-$new_version-release" >> $GITHUB_ENV
          
    outputs:
      new_version: ${{ steps.get-next-version-and-tag.outputs.version }}
      new_tag: ${{ steps.get-next-version-and-tag.outputs.tag }}
      branch_name: ${{ steps.get-next-version-and-tag.outputs.branch_name }}

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: get_next_version
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Upgrade pip
        run: |
          python3 -m pip install --upgrade pip

      - name: Install cibuildwheel
        run: |
          python3 -m pip install cibuildwheel

      - name: Build wheels for CPython
        run: |
          echo $LD_LIBRARY_PATH
          echo $(strings /lib64/libc.so.6 | grep GLIBC)
          python3 -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp38-*64"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_BEFORE_BUILD: git submodule update --init --recursive && pip install .
          # Install system library
          CIBW_BEFORE_BUILD_LINUX: (yum install -y libffi-devel || apt-get install -y libffi-devel || apk add --update --no-cache libffi-devel || true) && (yum install -y libc6 || apt-get install -y libc6 || apk add --update --no-cache libc6 || true)
          CIBW_ENVIRONMENT: "PIP_ONLY_BINARY=numpy"
          CIBW_SKIP: "*musllinux*"
